if exists (select * from sys.objects where name='sp_SaveApplicationData' and type='P')
	drop procedure dbo.sp_SaveApplicationData
GO

create procedure dbo.sp_SaveApplicationData(
	@LOAN_TYPE_ID						char(2),
	@FIRST_NAME_AM						nvarchar(20),
	@LAST_NAME_AM						nvarchar(20),
	@PATRONYMIC_NAME_AM					nvarchar(20),
	@BIRTH_DATE							date,
	@SOCIAL_CARD_NUMBER					char(10),
	@GENDER								bit,
	@DISTRICT							nvarchar(40),
	@COMMUNITY							nvarchar(40),
	@STREET								nvarchar(100),
	@BUILDING							nvarchar(40),
	@APARTMENT							nvarchar(40),
	@FEE								money,
	@NON_BIOMETRIC_PASSPORT_NUMBER		char(9),
	@NON_BIOMETRIC_PASSPORT_ISSUE_DATE	date,
	@NON_BIOMETRIC_PASSPORT_EXPIRY_DATE	date,
	@NON_BIOMETRIC_PASSPORT_ISSUED_BY	char(3),
	@BIOMETRIC_PASSPORT_NUMBER			char(9),
	@BIOMETRIC_PASSPORT_ISSUE_DATE		date,
	@BIOMETRIC_PASSPORT_EXPIRY_DATE		date,
	@BIOMETRIC_PASSPORT_ISSUED_BY		char(3),
	@ID_CARD_NUMBER						char(9),
	@ID_CARD_ISSUE_DATE					date,
	@ID_CARD_EXPIRY_DATE				date,
	@ID_CARD_ISSUED_BY					char(3),
	@INITIAL_AMOUNT						money,
	@CURRENCY_CODE						char(3),
	@FINAL_AMOUNT						money,
	@INTEREST							money,
	@REPAY_DAY							tinyint			= null,
	@PERIOD_TYPE_CODE					char(2),
	@FIRST_NAME_EN						varchar(20)		= null,
	@LAST_NAME_EN						varchar(20)		= null,
	@BIRTH_PLACE_CODE					char(2)			= null,
	@CITIZENSHIP_CODE					char(2)			= null,
	@MOBILE_PHONE_1						varchar(20),
	@FIXED_PHONE						varchar(20)		= null,
	@EMAIL								varchar(70),
	@COMMUNICATION_TYPE_CODE			char(1)			= null,
	@LOAN_GETTING_OPTION_CODE 			char(1)			= null,
	@REGISTRATION_COUNTRY_CODE			char(2)			= null,
	@REGISTRATION_STATE_CODE			char(3)			= null,
	@REGISTRATION_CITY_CODE				char(9)			= null,
	@REGISTRATION_STREET				nvarchar(150)	= null,
	@REGISTRATION_BUILDNUM				nvarchar(30)	= null,
	@REGISTRATION_APARTMENT				nvarchar(30)	= null,
	@CURRENT_COUNTRY_CODE				char(2)			= null,
	@CURRENT_STATE_CODE					char(3)			= null,
	@CURRENT_CITY_CODE					char(9)			= null,
	@CURRENT_STREET						nvarchar(150)	= null,
	@CURRENT_BUILDNUM					nvarchar(30)	= null,
	@CURRENT_APARTMENT					nvarchar(30)	= null,
	@AGREEMENT_NUMBER					nvarchar(14)	= null,

	@PLEDGE_AMOUNT						money = NULL,
	@PLEDGE_CURRENCY					char(3) = NULL,
	@PLEDGE_RATIO						money = NULL,
	@PLEDGE_NAME						nvarchar(100) = NULL,
	@PLEDGE_PRICE						money = NULL,

	@ID									uniqueidentifier	output
)
AS
	BEGIN TRANSACTION

	BEGIN TRY
		declare @DOCUMENT_TYPE_CODE char(1),@DOCUMENT_NUMBER char(9)
			,@LOAN_TEMPLATE_CODE char(4),@OVERDRAFT_TEMPLATE_CODE char(4)

		set @ID = newid()
		if rtrim(@NON_BIOMETRIC_PASSPORT_NUMBER)<>''
		begin
			set @DOCUMENT_TYPE_CODE='1'
			set @DOCUMENT_NUMBER=@NON_BIOMETRIC_PASSPORT_NUMBER
		end
		else if rtrim(@BIOMETRIC_PASSPORT_NUMBER)<>''
		begin
			set @DOCUMENT_TYPE_CODE='2'
			set @DOCUMENT_NUMBER=@BIOMETRIC_PASSPORT_NUMBER
		end
		else
		begin
			set @DOCUMENT_TYPE_CODE='3'
			set @DOCUMENT_NUMBER=@ID_CARD_NUMBER
		end

		select @LOAN_TEMPLATE_CODE=
			case lt.IS_OVERDRAFT
				when 0 then at.TEMPLATE_CODE
				else null
			end,
			@OVERDRAFT_TEMPLATE_CODE=
			case lt.IS_OVERDRAFT
				when 1 then at.TEMPLATE_CODE
				else null
			end
		from LOAN_TYPE lt
		join AGREEMENT_TEMPLATE_BY_TYPE at
			on lt.CODE=at.LOAN_TYPE_ID
				and at.CURRENCY_CODE=@CURRENCY_CODE
		where lt.CODE=@LOAN_TYPE_ID

		insert into dbo.APPLICATION (
			CREATION_DATE,
			ID,
			SOURCE_ID,
			LOAN_TYPE_ID,
			STATUS_ID,
			INITIAL_AMOUNT,
			CURRENCY_CODE,
			TO_BE_SYNCHRONIZED,
			FIRST_NAME_AM,
			LAST_NAME_AM,
			PATRONYMIC_NAME_AM,
			BIRTH_DATE,
			SOCIAL_CARD_NUMBER,
			DOCUMENT_TYPE_CODE,
			DOCUMENT_NUMBER,
			FINAL_AMOUNT,
			PERIOD_TYPE_CODE,
			INTEREST,
			REPAY_DAY,
			FIRST_NAME_EN,
			LAST_NAME_EN,
			MOBILE_PHONE_1,
			FIXED_PHONE,
			EMAIL,
			BIRTH_PLACE_CODE,
			CITIZENSHIP_CODE,
			REGISTRATION_COUNTRY_CODE,
			REGISTRATION_STATE_CODE,
			REGISTRATION_CITY_CODE,
			REGISTRATION_STREET,
			REGISTRATION_BUILDNUM,
			REGISTRATION_APARTMENT,
			CURRENT_COUNTRY_CODE,
			CURRENT_STATE_CODE,
			CURRENT_CITY_CODE,
			CURRENT_STREET,
			CURRENT_BUILDNUM,
			CURRENT_APARTMENT,
			COMMUNICATION_TYPE_CODE,
			LOAN_GETTING_OPTION_CODE,
			LOAN_TEMPLATE_CODE,
			OVERDRAFT_TEMPLATE_CODE,
			AGREEMENT_NUMBER
		)
		values (
			getdate(),
			@ID,
			4,
			@LOAN_TYPE_ID,
			15,
			@INITIAL_AMOUNT,
			@CURRENCY_CODE,
			1,
			@FIRST_NAME_AM,
			@LAST_NAME_AM,
			@PATRONYMIC_NAME_AM,
			@BIRTH_DATE,
			@SOCIAL_CARD_NUMBER,
			@DOCUMENT_TYPE_CODE,
			@DOCUMENT_NUMBER,
			@FINAL_AMOUNT,
			@PERIOD_TYPE_CODE,
			@INTEREST,
			@REPAY_DAY,
			@FIRST_NAME_EN,
			@LAST_NAME_EN,
			@MOBILE_PHONE_1,
			@FIXED_PHONE,
			@EMAIL,
			@BIRTH_PLACE_CODE,
			@CITIZENSHIP_CODE,
			@REGISTRATION_COUNTRY_CODE,
			@REGISTRATION_STATE_CODE,
			@REGISTRATION_CITY_CODE,
			@REGISTRATION_STREET,
			@REGISTRATION_BUILDNUM,
			@REGISTRATION_APARTMENT,
			@CURRENT_COUNTRY_CODE,
			@CURRENT_STATE_CODE,
			@CURRENT_CITY_CODE,
			@CURRENT_STREET,
			@CURRENT_BUILDNUM,
			@CURRENT_APARTMENT,
			@COMMUNICATION_TYPE_CODE,
			@LOAN_GETTING_OPTION_CODE,
			@LOAN_TEMPLATE_CODE,
			@OVERDRAFT_TEMPLATE_CODE,
			@AGREEMENT_NUMBER
		)

		insert into dbo.NORQ_QUERY_RESULT (
			APPLICATION_ID,
			FIRST_NAME,
			LAST_NAME,
			PATRONYMIC_NAME,
			BIRTH_DATE,
			GENDER,
			DISTRICT,
			COMMUNITY,
			STREET,
			BUILDING,
			APARTMENT,
			NON_BIOMETRIC_PASSPORT_NUMBER,
			NON_BIOMETRIC_PASSPORT_ISSUE_DATE,
			NON_BIOMETRIC_PASSPORT_EXPIRY_DATE,
			NON_BIOMETRIC_PASSPORT_ISSUED_BY,
			BIOMETRIC_PASSPORT_NUMBER,
			BIOMETRIC_PASSPORT_ISSUE_DATE,
			BIOMETRIC_PASSPORT_EXPIRY_DATE,
			BIOMETRIC_PASSPORT_ISSUED_BY,
			ID_CARD_NUMBER,
			ID_CARD_ISSUE_DATE,
			ID_CARD_EXPIRY_DATE,
			ID_CARD_ISSUED_BY,
			SOCIAL_CARD_NUMBER,
			FEE
		)
		values (
			@ID,
			@FIRST_NAME_AM,
			@LAST_NAME_AM,
			@PATRONYMIC_NAME_AM,
			@BIRTH_DATE,
			@GENDER,
			@DISTRICT,
			@COMMUNITY,
			@STREET,
			@BUILDING,
			@APARTMENT,
			@NON_BIOMETRIC_PASSPORT_NUMBER,
			@NON_BIOMETRIC_PASSPORT_ISSUE_DATE,
			@NON_BIOMETRIC_PASSPORT_EXPIRY_DATE,
			@NON_BIOMETRIC_PASSPORT_ISSUED_BY,
			@BIOMETRIC_PASSPORT_NUMBER,
			@BIOMETRIC_PASSPORT_ISSUE_DATE,
			@BIOMETRIC_PASSPORT_EXPIRY_DATE,
			@BIOMETRIC_PASSPORT_ISSUED_BY,
			@ID_CARD_NUMBER,
			@ID_CARD_ISSUE_DATE,
			@ID_CARD_EXPIRY_DATE,
			@ID_CARD_ISSUED_BY,
			@SOCIAL_CARD_NUMBER,
			@FEE
		)

		if isnull(@PLEDGE_NAME,'')<>''
		begin
			if isnull(@PLEDGE_AMOUNT,0)=0
				set @PLEDGE_AMOUNT=@PLEDGE_PRICE

			insert into PLEDGE(APPLICATION_ID, AMOUNT, CURRENCY, RATIO, PLEDGE_NAME, PRICE)
			values(@ID, @PLEDGE_AMOUNT, @PLEDGE_CURRENCY, @PLEDGE_RATIO, @PLEDGE_NAME, @PLEDGE_PRICE)
		end

		COMMIT TRANSACTION
	END TRY
	BEGIN CATCH
		ROLLBACK TRANSACTION
		declare @ErrorMessage nvarchar(4000) = ERROR_MESSAGE()
		RAISERROR (@ErrorMessage, 17, 1)
		RETURN
	END CATCH
GO
